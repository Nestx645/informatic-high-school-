import random

def dico_alea() -> dict:
    """
    Fonction qui construit un dictionnaire de codage
    à chaque lettre MAJUSCULE de l'alphabet on fait correspondre
    une lettre MAJUSCULE prise aléatoirement
    :return: un dictionnaire ex : {'A': 'D', 'B': 'Y'....}
    """
    l= []
    for i in range(65, 91):
        l.append(chr(i))
        
    random.shuffle(l)
    d={}
    for a in range (0,26):
        d[chr(65+a)]=l[a]
    return d

       

def crypto_lettre(dico: dict, lettre: str) -> str:
    """
    Fonction qui renvoie une lettre cryptée d'après le dictionnaire associé
    :param dico:
    :param lettre: lettre MAJUSCULE
    :return: la lettre cryptée en MAJUSCULE
    """
    return dico[lettre]

def crypto_texte(dico, texte):
    """
    Fonction qui renvoie un texte crypté à partir du texte entré et
    du dictionnaire associé
    On utilise la fonction crypto_lettre
    :param dict:
    :param texte: texte en MAJUSCULES
    :return: le texte crypté en MAJUSCULES
    """
    lettre=""
    for i in range(len(texte)):
        if texte[i]==" ":
            lettre+=" "
        else:
            lettre+=crypto_lettre(dico, texte[i])     
    return lettre

print(crypto_texte(dico_alea(), 'BIEN LE BONJOUR'))

def lire_fichier(fichier: str) -> list:
    """
    Fonction qui renvoie une liste après lecture d'un fichier texte
    :param fichier:
    :return: liste contenant le texte
    """
    fich=open(fichier, "r")
    texte=fich.readline()
    print(texte)
    fich.close()
    
print(lire_fichier("un fichier de bg.py"))

def occurrence(texte: str) -> dict:
    """
    Fonction qui renvoie un dictionnaire composé des lettres de
    l'alphabet et du nombre d'occurences de la lettre dans le texte
    entré en paramètre
    :param texte: le texte crypté en MAJUSCULES
    :return: un dictionnaire
    """
    dico_occurence = {}
    for a in range (0,26):
        for i in range (len(texte)):
            
            dico_occurence[chr(65+a)]=

def maxi(dico: dict) -> str:
    """
    Fonction qui renvoie la lettre ayant la plus grande occurence
    des lettres du dictionnaire
    :param dico: dictionnaire des occurences
    :return: la lettre ayant la plus grande occurence
    """
    pass

def propose(texte: str) -> dict:
    """
    Fonction qui renvoie une proposition de dictionnaire de décodage
    du texte entré en paramètre
    On utilise les fonctions occurence et maxi
    :param texte:
    :return: le dictionnaire de décodage
    """
    pass

def permute(dico: dict,l1: str,l2: str) -> dict:
    """
    Fonction qui permute 2 lettres dans un dictionnaire
    :param dico:
    :param l1: lettre en MAJUSCULE
    :param l2: lettre en MAJUSCULE
    :return: le nouveau dictionnaire
    """
    pass

"""#programme principal
table = lire_fichier("texte.txt")
d = propose(table)
print(d)
print(crypto_texte(d, table))
permute(d,"N","L")
permute(d,"H","B")
permute(d,"H","G")
permute(d,"L","U")
permute(d,"Q","H")
print()
print(crypto_texte(d, table))"""
